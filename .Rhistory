n
n
load_all()
 extract_headlines(orgfile)
load_all()
 extract_headlines(orgfile)
load_all()
 extract_headlines(orgfile)
load_all()
 extract_headlines(orgfile)
 extract_headlines(orgfile)
 extract_headlines(orgfile)
install()
load_all()
install()
"string" dplyr::%>% print()
install()
install()
install()
packageVersion(magrittr)
packageVersion(magrittr)
packageVersion("magrittr")
install()
load_all()
f <- clock_dataframe(readLines("~/orgmode/TODO.org"))
head(f)
f$Headline
"*** TODO R - class() or typeof() notes" %>% extract_raw_headlines()
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "")
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "") %>% stringr::str_replace_all("(:[[:alnum:]]{1, }){1, }:$", "")
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "") %>% stringr::str_replace_all("(:[[:alnum:]]{1, }){1, }:$", "") %>% stringr::str_replace_all(
                    stringr::perl(
                        "\\b[[:upper:]]+((\\b)|(_[[:upper:]]+\\b))(?!(\\s{2}|\\t|$))"),
                    "")
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "") %>% stringr::str_replace_all("(:[[:alnum:]]{1, }){1, }:$", "") %>% stringr::str_replace_all(
                    stringr::perl(
                        "\\b[[:upper:]]+((\\b)|(_[[:upper:]]+\\b))(?!(\\s{2}|\\t|$))"),
                    "")
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "") %>% stringr::str_replace_all("(:[[:alnum:]]{1, }){1, }:$", "") %>% stringr::str_replace_all(
                    stringr::perl(
                        "\\b[[:upper:]]+((\\b)|(_[[:upper:]]+\\b))(?!(\\s{2}|\\t|$))"),
                    "")
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "") %>% stringr::str_replace_all("(:[[:alnum:]]{1, }){1, }:$", "") %>% stringr::str_replace_all(
                    stringr::perl(
                        "\\b[[:upper:]]{2, }((\\b)|(_[[:upper:]]+\\b))(?!(\\s{2}|\\t|$))"),
                    "")
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "") %>% stringr::str_replace_all("(:[[:alnum:]]{1, }){1, }:$", "") %>% stringr::str_replace_all(
                    stringr::perl(
                        "\\b[[:upper:]]{2}((\\b)|(_[[:upper:]]+\\b))(?!(\\s{2}|\\t|$))"),
                    "")
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "") %>% stringr::str_replace_all("(:[[:alnum:]]{1, }){1, }:$", "") %>% stringr::str_replace_all(
                    stringr::perl(
                    "\\b[[:upper:]]{2,4}((\\b)|(_[[:upper:]]+\\b))(?!(\\s{2}|\\t|$))"),
                    "")
"*** TODO R - class() or typeof() notes" %>% stringr::str_replace("^\\*{1, }\\ ", "") %>% stringr::str_replace_all("(:[[:alnum:]]{1, }){1, }:$", "") %>% stringr::str_replace_all(
                    stringr::perl(
                    "\\b[[:upper:]]{2,}((\\b)|(_[[:upper:]]+\\b))(?!(\\s{2}|\\t|$))"),
                    "")
"*** TODO R - class() or typeof() notes" %>% extract_headlines()
f <- clock_dataframe(readLines("~/orgmode/TODO.org"))
head(f)
f$Headline
install()
load_all()
f <- clock_dataframe(readLines("~/orgmode/TODO.org"))
f$Headline
install()
load_all()
f <- clock_dataframe(readLines("~/orgmode/TODO.org"))
head(f)
head(f, 25)
f$Headline
install()
load_all()
f <- clock_dataframe(readLines("~/orgmode/TODO.org"))
head(f, 25)
f$Headline
GetClockTable(orgfile)
GetClockTable("~/orgmode/INBOX.org")
GetTS("~/orgmode/INBOX.org")
GetHeadlines("~/orgmode/INBOX.org")
f
install()
load_all()
check_doc()
install()
load_all()
getwd()
clock_dataframe(orgfile)
n
load_all()
devtools::install_github("hadley/lineprof")
library(lineprof)
lineprof(clock_dataframe(orgfile))
lineprof(extract_headlines(orgfile))
lineprof(extract_headlines(orgfile))
lineprof(extract_headlines(orgfile))
clock_dataframe(orgfile) %>% sapply(typeof) %>% as.character()
clock_dataframe(orgfile) %>% sapply(typeof) %>% as.character() %>% dput()
extract_timestamps(orgfile[83][[1]])
extract_timestamps(orgfile[82][[1]])
extract_deadlines(orgfile)
extract_deadlines(orgfile) %>% typeof()
tidy_eval(text = "extract_deadlines(orgfile)")
extract_timestamps(orgifle)
extract_timestamps(orgfile)
intervals  <- extract_intervals(orgfile, units = units)
        timestamps <- extract_timestamps(orgfile)
intervals  <- extract_intervals(orgfile, units = "mins")

        timestamps <- extract_timestamps(orgfile)
intervals
gc()
names
timestamps
extract_intervals_per_day(orgfile)
extract_intervals_per_day(orgfile)
odd   <- seq(1, length(x), by = 2)
odd   <- seq(1, length(timestamps), by = 2)
odd
x[odd]
timestams[[12]][odd]
timestamps[[12]][odd]
extract_intervals_per_day(orgfile)
extract_intervals_per_day(orgfile)
extract_intervals_per_day(orgfile)
timestamps[!odd]
timestamps[[12]][!odd]
timestamps[[12]][odd]
timestamps[[12]][odd+1]
extract_intervals_per_day(orgfile)
extract_intervals_per_day(orgfile)
extract_intervals_per_day(orgfile)
extract_intervals_per_day(orgfile)
extract_intervals_per_day(orgfile)
extract_intervals_per_day(orgfile)
f <- extract_intervals_per_day(orgfile)
f %>% unlist()
f <- extract_intervals_per_day(orgfile)
f
unlist(f)
names(f)
c(a:c)
c("a":"c")
letters[1:4]
str(f)
names(f) <- letters[1:12]
f
unlist(f)
as.data.frame(f)
cbind.data.frame(f)
rbind.data.frame(f)
rbind.fill(f)
do.call(rbind, unlist(f))
do.call(rbind, f)
do.call(rbind, f)
do.call(rbind, f) %>% as.data.frame()
do.call(rbind, f) %>% as.data.frame() %>% t()
do.call(rbind, f) sapply(unique) %>% as.data.frame() %>% t()
do.call(rbind, f) %>% sapply(unique) %>% as.data.frame() %>% t()
do.call(rbind, f) %>% as.data.frame() %>% t()
f <- do.call(rbind, f) %>% as.data.frame() %>% t()
f["l"]
f[, "l"]
f[, "c"]
f[, "c"] %>% unique()
f <- extract_intervals_per_day(orgfile)
listOfVectors <- lapply(lapply(f, unlist), "[", unique(unlist(c(sapply(f, names)))))
listOfVectors
f
rbind.fill(f)
as.data.frame(f)
as.data.frame(unlist(f))
rbind(f)
do.call("rbind", f)
do.call("rbind.fill", f)
do.call("rbind.fill", as.data.frame(f))
do.call("rbind.fill", sapply(f, as.data.frame))
sapply(f, as.data.frame)
sapply(f, as.data.frame) %>% unlist()
sapply(sapply(f, as.data.frame), rbind.fill)
rbind.fill(f, as.data.frame)
rbind.fill(sapply(f, as.data.frame), rbind.fill)
rbind.data.frame(sapply(f, as.data.frame), rbind.fill)
sapply(f, as.data.frame)
sapply(f, as.data.frame) %>% lapply(rbind.fill)
sapply(f, as.data.frame) %>% unlist()
sapply(f, as.data.frame) %>% unlist() %>% rbind.data.frame()
sapply(f, as.data.frame) %>% unlist() %>% rbind.fill()
sapply(f, as.data.frame) %>% rbind.fill()
sapply(f, as.data.frame) %>% rbind()
lapply(f, as.data.frame) %>% rbind()
lapply(f, as.data.frame)
lapply(f, as.data.frame) %>% rbind.fill()
lapply(f, as.data.frame) %>% rbind_all()
packageVersion("dplyr")
version("dplyr") 
packageVersion("dplyr")
lapply(f, as.data.frame) %>% rbind_all()
n
data(flights)
FT_stats
n
